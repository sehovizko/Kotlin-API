server:
  port: 9000
---
spring:
  profiles: LOCAL, default, test, MACOS
  authKey: mockAuthKey
  datasource:
    url: jdbc:postgresql://localhost:5432/cag_db?currentSchema=cag_backend_api
    username: cag_admin
    password: ${PSQL_PASSWORD:cag_pass}
    initialization-mode: always
    hikari:
      minimum-idle: 2
      maximum-pool-size: 4
    jpa:
      database: cag_db
      hibernate:
        ddl-auto: create
      properties:
        hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
flyway:
  url: jdbc:postgresql://localhost:5432/cag_db?currentSchema=cag_backend_api
  schemas: cag_backend_api
  user: "cag_admin"
  password: "cag_pass"
---
spring:
  profiles: WINDOWS
  authKey: mockAuthKey
  datasource:
    url: jdbc:postgresql://192.168.99.100:5432/cag_db?currentSchema=cag_backend_api
    username: cag_admin
    password: ${PSQL_PASSWORD:cag_pass}
    initialization-mode: always
    hikari:
      minimum-idle: 2
      maximum-pool-size: 4
    jpa:
      database: cag_db
      hibernate:
        ddl-auto: create
      properties:
        hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
flyway:
  url: jdbc:postgresql://192.168.99.100:5432/cag_db?currentSchema=cag_backend_api
  schemas: cag_backend_api
  user: "cag_admin"
  password: "cag_pass"
---
spring:
  profiles: PROD
  authKey: mockAuthKey
  datasource:
    url: tbd
    username: cag_admin
    password: ${PSQL_PASSWORD:cag_pass}
    hikari:
      minimum-idle: 2
      maximum-pool-size: 4
    jpa:
      database: cag_db
      hibernate:
        ddl-auto: create
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
