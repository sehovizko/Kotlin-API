plugins {
	id "java"
	id "org.springframework.boot" version "2.3.3.RELEASE"
	id "io.spring.dependency-management" version "1.0.10.RELEASE"
	id "org.jetbrains.kotlin.jvm" version "1.3.72"
	id "io.franzbecker.gradle-lombok" version "4.0.0"
}

group = "com.cag.cagbackendapi"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-data-rest"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	implementation "javax.validation:validation-api:2.0.0.Final"
	implementation "org.projectlombok:lombok:1.16.16" // Auto-generates constructors, getters, and setters for Java model classes using annotations
	implementation "org.modelmapper:modelmapper:2.3.5" // Maps objects of one class to another class
	implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.0" // Makes it so you don't need to annotate your models with @JsonProperty to map fields from json strings
	implementation "org.apache.httpcomponents:httpclient" // Fixes integration test error: I/O error on POST request for "http://localhost:58941/path": cannot retry due to server authentication, in streaming mode; nested exception is java.net.HttpRetryException: cannot retry due to server authentication, in streaming mode
//    implementation "org.flywaydb:flyway-core"

	runtime "org.springframework.boot:spring-boot-devtools"
	runtime "org.postgresql:postgresql:42.2.13"

	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: "org.junit.vintage', module: 'junit-vintage-engine"
	}
	testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
	testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
	testImplementation "org.mockito:mockito-junit-jupiter:3.0.0"
	testImplementation "org.mockito:mockito-core:3.0.0"
	testImplementation "org.junit.platform:junit-platform-runner:1.2.0"
}

test {
	useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
